name: 'Terraform - Pull Request'

on:
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    #- name: Terraform Format
    #  run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      #run: terraform plan -input=false
      run: terraform plan -var "azure_client_id=${{secrets.ARM_CLIENT_ID}}" -var "azure_client_secret=${{secrets.ARM_CLIENT_SECRET}}" -var "azure_subscription_id=${{secrets.ARM_SUBSCRIPTION_ID}}" -var "azure_tenant_id=${{secrets.ARM_TENANT_ID}}"